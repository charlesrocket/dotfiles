(defwidget bar []
  (centerbox :orientation "h"
    (left)
    (center)
    (right)))

(defwidget left []
  (box
    (workspaces)))

(defwidget center []
  (box
    (window_w)))

(defwidget right []
  (box
    (stats)))

(defwidget stats []
  (box :class "stats" :orientation "h" :space-evenly false :halign "end"
    (metric :label ""
            :label-visible true
            :label-class "stats-cpu"
            :value {EWW_CPU.avg}
            :tooltip {EWW_CPU.avg}
            :visible true
            :onchange "")
    (metric :label ""
            :label-visible true
            :label-class "stats-ram"
            :value {EWW_RAM.used_mem_perc}
            :tooltip {EWW_RAM.used_mem}
            :visible true
            :onchange "")
    (metric :label ""
            :label-class "stats-disk"
            :label-visible true
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :tooltip {EWW_DISK["/"].free}
            :visible true
            :onchange "")
    (metric :label "${battery_info.stat == "ac" ? "" : ""}"
            :label-visible {battery_info.source == "battery" ? true : false}
            :label-class "${battery_info.message == "critical" ? "stats-batt-low" : ""} ${battery_info.message == "charged" ? "stats-batt-charged" : ""}"
            :value {battery_info.percentage}
            :tooltip {battery_info.time}
            :visible {battery_info.source == "battery" ? true : false}
            :onchange "")
    (stats-separator)
    time))

(deflisten workspaces :initial "[]" "sh ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "sh ~/.config/eww/scripts/get-active-workspace")
(deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title")
(defpoll battery_info :interval "3s" "perl ~/.config/eww/scripts/get-battery")

(defwidget workspaces []
  (box :space-evenly false :spacing 6 :class "workspaces"
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
        (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
          (label :text "${workspace.name}" )
          )
        )
      )
    )
  )

(defwidget window_w []
  (box
    (label :text "${window}"
           :limit-width 65)
  ))

(defwidget stats-separator []
  (box
    (label :text "|"
           :class "stats-separator"
           :justify "center")))

(defwidget metric [label label-class value tooltip visible label-visible onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :visible label-visible
         :class label-class label)
    (scale :min 0
           :max 101
           :orientation "v"
           :flipped true
           :active {onchange != ""}
           :value value
           :tooltip tooltip
           :visible visible
           :onchange onchange)))

(defpoll time :interval "10s"
  "date '+%H:%M  %b %d %Y'")

(defwindow bar
  :monitor 0
  :namespace "eww-bar"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "99%"
                      :height "26px"
                      :anchor "top center")
  (bar))
